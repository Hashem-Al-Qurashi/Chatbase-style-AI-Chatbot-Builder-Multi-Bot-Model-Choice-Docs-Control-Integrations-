# Generated by Django 4.2.7 on 2025-10-03 19:40

import apps.core.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "price_monthly",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Monthly price in USD",
                        max_digits=10,
                    ),
                ),
                (
                    "price_yearly",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Yearly price in USD (optional)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "stripe_price_id_monthly",
                    models.CharField(
                        blank=True,
                        help_text="Stripe price ID for monthly billing",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "stripe_price_id_yearly",
                    models.CharField(
                        blank=True,
                        help_text="Stripe price ID for yearly billing",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "message_quota",
                    models.PositiveIntegerField(help_text="Monthly message quota"),
                ),
                (
                    "max_chatbots",
                    models.PositiveIntegerField(help_text="Maximum number of chatbots"),
                ),
                (
                    "max_knowledge_sources",
                    models.PositiveIntegerField(
                        help_text="Maximum knowledge sources per chatbot"
                    ),
                ),
                (
                    "max_file_size_mb",
                    models.PositiveIntegerField(help_text="Maximum file size in MB"),
                ),
                (
                    "features",
                    apps.core.models.JSONField(
                        default=dict, help_text="Available features for this plan"
                    ),
                ),
                (
                    "is_popular",
                    models.BooleanField(
                        default=False, help_text="Mark as popular plan"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Is plan available for new subscriptions",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, help_text="Display order"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription Plan",
                "verbose_name_plural": "Subscription Plans",
                "db_table": "subscription_plans",
                "ordering": ["sort_order", "price_monthly"],
            },
        ),
        migrations.CreateModel(
            name="UsageRecord",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                (
                    "hour",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Hour of day (0-23) for hourly tracking",
                        null=True,
                    ),
                ),
                ("messages_sent", models.PositiveIntegerField(default=0)),
                ("tokens_used", models.PositiveIntegerField(default=0)),
                ("embeddings_generated", models.PositiveIntegerField(default=0)),
                ("storage_used_mb", models.FloatField(default=0.0)),
                (
                    "openai_cost",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("0.0000"),
                        help_text="OpenAI API costs",
                        max_digits=10,
                    ),
                ),
                (
                    "pinecone_cost",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("0.0000"),
                        help_text="Pinecone costs",
                        max_digits=10,
                    ),
                ),
                (
                    "storage_cost",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("0.0000"),
                        help_text="S3 storage costs",
                        max_digits=10,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_records",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Usage Record",
                "verbose_name_plural": "Usage Records",
                "db_table": "usage_records",
                "indexes": [
                    models.Index(
                        fields=["user", "date"], name="usage_recor_user_id_184cb9_idx"
                    ),
                    models.Index(fields=["date"], name="usage_recor_date_dfccc4_idx"),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="usagerecord",
            constraint=models.UniqueConstraint(
                fields=("user", "date", "hour"), name="unique_usage_per_hour"
            ),
        ),
    ]
